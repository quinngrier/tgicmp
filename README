One of the difficulties with the C language is its surprising behavior
when comparing integers with different types. A simple example is the
comparison -1 < 0u, which is true in the abstract but false in C. This
is because of the usual arithmetic conversions, which are a subtle set
of rules that C uses to consolidate operands with different types. In
this example, the left operand has type int and the right operand has
type unsigned int, causing the left to be converted to the type of the
right. Since signed to unsigned conversions are modular, the comparison
becomes UINT_MAX < 0u, which is false.

The complete definition of the usual arithmetic conversions is given by
the C standard. When comparing integers, the key observation is that the
result matches that in the abstract except possibly when one operand has
negative value and the other has unsigned type. In this case, the value
may be converted to an unsigned type, possibly changing the result.

This difficulty is usually avoided by not mixing signed and unsigned
integer types, but this can be undesirable when writing generic code
intended to operate on arbitrary integer types. For this purpose, this
directory provides the header file tgicmp.h, which defines six macros
that implement the four relational operators (<, >, <=, and >=) and the
two equality operators (== and !=) with abstract semantics for operands
with arbitrary integer types.

The six macros are TGILT, TGIGT, TGILE, TGIGE, TGIEQ, and TGINE, which
correspond to the six operators. Each macro takes two arguments x and y,
each of which must be an expression with integer type but may otherwise
have any type and value. The expansion is a parenthesized expression
with type int and value 1 if x op y is true in the abstract or 0 if not,
where op is the corresponding operator. If x and y are suitable for use
in #if preprocessing directives, so is the expansion. If x and y are
integer constant expressions, so is the expansion. The expansion may
evaluate each of x and y more than once.

The header file is safe to include more than once. The only reserved
identifiers are the six macro names.

The authors of this file have waived all copyright and
related or neighboring rights to the extent permitted by
law as described by the CC0 1.0 Universal Public Domain
Dedication. You should have received a copy of the full
dedication along with this file, typically as a file
named <CC0-1.0.txt>. If not, it may be available at
<https://creativecommons.org/publicdomain/zero/1.0/>.
